"use client"

import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog"
import { Checkbox } from "@/components/ui/checkbox"
import { ArrowLeft, Share2, RefreshCw, Home, Phone, Copy, Check, Download } from "lucide-react"
import Image from "next/image"
import Link from "next/link"
import { useSearchParams } from "next/navigation"

interface TestResult {
  score: number
  testType: "AQ-10" | "AQ-50"
  interpretation: {
    level: string
    description: string
    color: string
  }
}

const getResultContent = (score: number, testType: "AQ-10" | "AQ-50") => {
  let level: string
  let title: string
  let content: string
  let color: string

  if (testType === "AQ-10") {
    if (score <= 3) {
      level = "baixa"
      title = "Seu resultado: Baixa probabilidade de traÃ§os autÃ­sticos"
      color = "text-orange-600"
    } else if (score <= 6) {
      level = "moderada"
      title = "Seu resultado: PresenÃ§a de alguns traÃ§os autÃ­sticos"
      color = "text-orange-600"
    } else {
      level = "alta"
      title = "Seu resultado: Alta probabilidade de traÃ§os autÃ­sticos"
      color = "text-orange-600"
    }
  } else {
    // AQ-50
    if (score <= 25) {
      level = "baixa"
      title = "Seu resultado: Baixa probabilidade de traÃ§os autÃ­sticos"
      color = "text-orange-600"
    } else if (score <= 31) {
      level = "moderada"
      title = "Seu resultado: PresenÃ§a de alguns traÃ§os autÃ­sticos"
      color = "text-orange-600"
    } else {
      level = "alta"
      title = "Seu resultado: Alta probabilidade de traÃ§os autÃ­sticos"
      color = "text-orange-600"
    }
  }

  // Content based on level
  if (level === "baixa") {
    content = `Seu resultado indica que vocÃª apresenta uma baixa probabilidade de traÃ§os autÃ­sticos.

Isso significa que, com base nas suas respostas, nÃ£o foram identificados indÃ­cios relevantes que apontem para a presenÃ§a de caracterÃ­sticas associadas ao Transtorno do Espectro Autista (TEA). No entanto, Ã© importante lembrar que este Ã© apenas um instrumento de rastreio e nÃ£o substitui uma avaliaÃ§Ã£o clÃ­nica completa.

Se vocÃª tem dÃºvidas sobre o seu funcionamento emocional, comportamental ou cognitivo, ou percebe dificuldades em sua vida cotidiana, ainda assim pode ser Ãºtil conversar com um profissional da Ã¡rea da saÃºde mental. A avaliaÃ§Ã£o neuropsicolÃ³gica pode oferecer uma compreensÃ£o mais profunda do seu perfil e orientar possÃ­veis caminhos terapÃªuticos.`
  } else if (level === "moderada") {
    content = `Seu resultado indica a presenÃ§a de alguns traÃ§os que podem estar associados ao espectro autista.

Esses traÃ§os, no entanto, nÃ£o sÃ£o suficientes para indicar, por si sÃ³, a presenÃ§a de um diagnÃ³stico de autismo. Muitas pessoas tÃªm caracterÃ­sticas que lembram aspectos do espectro, como preferÃªncias por rotinas, hipersensibilidade sensorial ou dificuldade em interaÃ§Ãµes sociais, sem necessariamente apresentarem um transtorno.

Esse tipo de resultado pode refletir tanto o seu estilo de funcionamento quanto outras questÃµes emocionais, cognitivas ou contextuais. Caso essas caracterÃ­sticas estejam gerando sofrimento ou dÃºvidas, pode ser interessante procurar um profissional especializado para uma avaliaÃ§Ã£o mais aprofundada.`
  } else {
    content = `Seu resultado sugere uma alta probabilidade de presenÃ§a de traÃ§os relacionados ao Transtorno do Espectro Autista.

Isso significa que suas respostas indicam um padrÃ£o de funcionamento compatÃ­vel com diversos aspectos que costumam estar presentes em pessoas dentro do espectro. No entanto, Ã© fundamental ressaltar que este teste nÃ£o tem valor diagnÃ³stico: ele Ã© apenas um instrumento de triagem inicial.

Se vocÃª se identificou com esse resultado, o prÃ³ximo passo recomendado Ã© buscar uma avaliaÃ§Ã£o clÃ­nica com um profissional especializado. Essa avaliaÃ§Ã£o irÃ¡ considerar sua histÃ³ria de vida, seu funcionamento atual, seus contextos social e emocional, alÃ©m de aplicar outros instrumentos tÃ©cnicos para chegar a uma conclusÃ£o mais precisa.

Receber ou nÃ£o um diagnÃ³stico Ã© apenas parte do processo: o mais importante Ã© compreender como vocÃª funciona, quais sÃ£o seus desafios e suas potencialidades, e de que forma pode ser apoiado em sua jornada.`
  }

  return { title, content, color, level }
}

const getShareText = (level: string, testType: "AQ-10" | "AQ-50") => {
  const testName = testType === "AQ-10" ? "AQ-10" : "AQ-50"

  if (level === "alta") {
    return `Acabei de fazer o teste ${testName} para rastreio de autismo em adultos e meu resultado apontou uma alta probabilidade de traÃ§os autÃ­sticos. ğŸ§ ğŸŒˆ

Esse teste Ã© uma ferramenta rÃ¡pida, online e gratuita que pode ajudar a entender melhor alguns padrÃµes de comportamento.

Se vocÃª tambÃ©m tem dÃºvidas sobre o seu funcionamento, recomendo fazer: neuroschulman.com.br

#AutismoAdulto #NeurodivergÃªncia #Autoconhecimento #TriagemTEA`
  } else if (level === "moderada") {
    return `Fiz o teste ${testName} para triagem de autismo em adultos e meu resultado indicou que apresento alguns traÃ§os associados ao espectro autista. ğŸ§ âœ¨

Esse tipo de teste nÃ£o substitui uma avaliaÃ§Ã£o clÃ­nica, mas pode ser um bom ponto de partida para quem busca entender melhor suas vivÃªncias.

Quer fazer tambÃ©m? Ã‰ gratuito e leva menos de 5 minutos: neuroschulman.com.br

#AutismoAdulto #TriagemTEA #SaÃºdeMental #Neurodiversidade`
  } else {
    return `Acabei de fazer o teste ${testName} para rastreio de autismo em adultos!

Meu resultado indicou baixa probabilidade de traÃ§os autÃ­sticos, mas foi super interessante refletir sobre meu jeito de pensar e perceber o mundo. ğŸ’¡ğŸ§ 

VocÃª tambÃ©m pode fazer gratuitamente no site da NeuroSchulman: neuroschulman.com.br

Recomendo! ğŸ¤“

#Neurodiversidade #Autoconhecimento #AutismoAdulto #TriagemTEA`
  }
}

export default function ResultadoTeste() {
  const searchParams = useSearchParams()
  const [result, setResult] = useState<TestResult | null>(null)
  const [copied, setCopied] = useState(false)
  const [isLoading, setIsLoading] = useState(true)
  const [includeImage, setIncludeImage] = useState(true)
  const [shareDialogOpen, setShareDialogOpen] = useState(false)

  useEffect(() => {
    const score = searchParams.get("score")
    const testType = searchParams.get("testType") as "AQ-10" | "AQ-50"

    if (score && testType && !result) {
      const numScore = Number.parseInt(score)
      const resultContent = getResultContent(numScore, testType)

      setResult({
        score: numScore,
        testType,
        interpretation: {
          level: resultContent.level,
          description: resultContent.content,
          color: resultContent.color,
        },
      })
      setIsLoading(false)
    } else if (!score || !testType) {
      setIsLoading(false)
    }
  }, [searchParams, result])

  const handleShare = async (platform: string) => {
    if (!result) return

    const shareText = getShareText(result.interpretation.level, result.testType)

    if (platform === "whatsapp") {
      window.open(`https://wa.me/?text=${encodeURIComponent(shareText)}`, "_blank")
    } else if (platform === "twitter") {
      window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}`, "_blank")
    } else if (platform === "facebook") {
      window.open(
        `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(window.location.origin + "/teste-tea-adulto")}&quote=${encodeURIComponent(shareText)}`,
        "_blank",
      )
    } else if (platform === "instagram") {
      // For Instagram, we'll copy the text and show instructions
      try {
        await navigator.clipboard.writeText(shareText)
        alert("Texto copiado! Cole no Instagram junto com a imagem.")
      } catch (err) {
        console.error("Failed to copy text: ", err)
      }
    }

    setShareDialogOpen(false)
  }

  const handleCopyResult = async () => {
    if (!result) return

    const resultContent = getResultContent(result.score, result.testType)
    const shareText = `Acabei de fazer o teste ${result.testType} para rastreio de autismo em adultos. ${resultContent.title}. FaÃ§a vocÃª tambÃ©m: ${window.location.origin}/teste-tea-adulto`

    try {
      await navigator.clipboard.writeText(shareText)
      setCopied(true)
      setTimeout(() => setCopied(false), 2000)
    } catch (err) {
      console.error("Failed to copy text: ", err)
    }
  }

  const generateShareImage = () => {
    // This would generate an image with the test result
    // For now, we'll just download the brain mascot image
    const link = document.createElement("a")
    link.href = "/brain-mascot.png"
    link.download = `resultado-${result?.testType}-autismo.png`
    link.click()
  }

  if (isLoading || !result) {
    return (
      <div
        className="min-h-screen flex items-center justify-center"
        style={{ background: "linear-gradient(to bottom right, #f4f2ef, #f0fdfa)" }}
      >
        <div className="text-center">
          <p className="text-emerald-700 mb-4">Carregando resultado...</p>
          <Link href="/teste-tea-adulto">
            <Button variant="outline" className="text-emerald-700 bg-transparent">
              Voltar aos testes
            </Button>
          </Link>
        </div>
      </div>
    )
  }

  const resultContent = getResultContent(result.score, result.testType)
  const otherTestType = result.testType === "AQ-10" ? "AQ-50" : "AQ-10"
  const otherTestUrl = result.testType === "AQ-10" ? "/teste-tea-adulto/longo" : "/teste-tea-adulto/curto"

  return (
    <div className="min-h-screen" style={{ background: "linear-gradient(to bottom right, #f4f2ef, #f0fdfa)" }}>
      {/* Header */}
      <header className="bg-white/95 backdrop-blur-sm border-b" style={{ borderColor: "#f4f2ef" }}>
        <div className="container mx-auto px-4 py-2">
          <div className="flex items-center justify-between">
            <Link href="/" className="flex items-center space-x-3">
              <Image
                src="/logo-final.png"
                alt="Luiza Schulman - Neuropsicologia"
                width={180}
                height={60}
                className="h-10 w-auto"
              />
            </Link>
            <Link href="/teste-tea-adulto">
              <Button variant="ghost" className="text-emerald-700">
                <ArrowLeft className="h-4 w-4 mr-2" />
                Voltar aos testes
              </Button>
            </Link>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="container mx-auto px-4 py-16">
        <div className="max-w-4xl mx-auto">
          {/* Result Header */}
          <div className="text-center mb-8">
            <div className="mb-6">
              <div className="text-4xl font-bold text-emerald-800 mb-2">
                {result.score}/{result.testType === "AQ-10" ? "10" : "50"}
              </div>
              <p className="text-emerald-600">Teste {result.testType}</p>
            </div>
            <h1 className={`text-2xl lg:text-3xl font-bold mb-6 ${resultContent.color}`}>{resultContent.title}</h1>
          </div>

          {/* Result Content */}
          <Card className="bg-white shadow-lg mb-8">
            <CardContent className="p-8">
              <div className="prose prose-emerald max-w-none">
                {resultContent.content.split("\n\n").map((paragraph, index) => (
                  <p key={index} className="text-emerald-700 leading-relaxed mb-4 last:mb-0">
                    {paragraph}
                  </p>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* Action Buttons */}
          <div className="grid md:grid-cols-2 gap-4 mb-8">
            {/* Primary Actions */}
            <div className="space-y-4">
              <Button
                size="lg"
                className="w-full bg-emerald-600 hover:bg-emerald-700 text-white py-3"
                onClick={() =>
                  window.open(
                    "https://wa.me/5541984599063?text=OlÃ¡, acabei de fazer o teste gratuito para TEA no site e gostaria de agendar uma consulta.",
                    "_blank",
                  )
                }
              >
                <Phone className="h-4 w-4 mr-2" />
                Marcar uma consulta
              </Button>

              <Link href={otherTestUrl} className="block">
                <Button
                  variant="outline"
                  size="lg"
                  className="w-full text-emerald-700 border-emerald-200 hover:bg-emerald-50 py-3 bg-transparent"
                >
                  <RefreshCw className="h-4 w-4 mr-2" />
                  Fazer o teste {otherTestType}
                </Button>
              </Link>
            </div>

            {/* Secondary Actions */}
            <div className="space-y-4">
              <Link href="/" className="block">
                <Button
                  variant="outline"
                  size="lg"
                  className="w-full text-emerald-700 border-emerald-200 hover:bg-emerald-50 py-3 bg-transparent"
                >
                  <Home className="h-4 w-4 mr-2" />
                  Voltar ao inÃ­cio
                </Button>
              </Link>

              <div className="relative">
                <Button
                  variant="outline"
                  size="lg"
                  className="w-full text-emerald-700 border-emerald-200 hover:bg-emerald-50 py-3 bg-transparent"
                  onClick={handleCopyResult}
                >
                  {copied ? <Check className="h-4 w-4 mr-2" /> : <Copy className="h-4 w-4 mr-2" />}
                  {copied ? "Copiado!" : "Copiar resultado"}
                </Button>
              </div>
            </div>
          </div>

          {/* Share Options */}
          <Card className="bg-white shadow-lg">
            <CardHeader>
              <CardTitle className="text-emerald-800 text-center flex items-center justify-center">
                <Share2 className="h-5 w-5 mr-2" />
                Compartilhar resultado
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="flex justify-center">
                <Dialog open={shareDialogOpen} onOpenChange={setShareDialogOpen}>
                  <DialogTrigger asChild>
                    <Button
                      variant="outline"
                      className="text-emerald-700 border-emerald-200 hover:bg-emerald-50 bg-transparent px-8"
                    >
                      <Share2 className="h-4 w-4 mr-2" /> Compartilhe seu resultado
                    </Button>
                  </DialogTrigger>
                  <DialogContent className="sm:max-w-md">
                    <DialogHeader>
                      <DialogTitle className="text-emerald-800">Compartilhar resultado</DialogTitle>
                    </DialogHeader>
                    <div className="space-y-4">
                      {/* Include Image Option */}
                      <div className="flex items-center space-x-2 p-3 bg-emerald-50 rounded-lg">
                        <Checkbox
                          id="include-image"
                          checked={includeImage}
                          onCheckedChange={(checked) => setIncludeImage(checked as boolean)}
                        />
                        <label htmlFor="include-image" className="text-sm text-emerald-700 cursor-pointer">
                          {"âœ… Incluir imagem no compartilhamento"}
                        </label>
                      </div>

                      {includeImage && (
                        <div className="p-3 bg-gray-50 rounded-lg">
                          <p className="text-xs text-gray-600 mb-2">
                            A imagem serÃ¡ anexada automaticamente nos canais que permitem (WhatsApp, Instagram,
                            Facebook)
                          </p>
                          <Button
                            variant="outline"
                            size="sm"
                            onClick={generateShareImage}
                            className="w-full bg-transparent"
                          >
                            <Download className="h-4 w-4 mr-2" />
                            Baixar imagem
                          </Button>
                        </div>
                      )}

                      {/* Share Buttons */}
                      <div className="grid grid-cols-2 gap-3">
                        <Button
                          variant="outline"
                          className="text-green-600 border-green-200 hover:bg-green-50 bg-transparent"
                          onClick={() => handleShare("whatsapp")}
                        >
                          WhatsApp
                        </Button>
                        <Button
                          variant="outline"
                          className="text-blue-600 border-blue-200 hover:bg-blue-50 bg-transparent"
                          onClick={() => handleShare("twitter")}
                        >
                          Twitter/X
                        </Button>
                        <Button
                          variant="outline"
                          className="text-blue-800 border-blue-200 hover:bg-blue-50 bg-transparent"
                          onClick={() => handleShare("facebook")}
                        >
                          Facebook
                        </Button>
                        <Button
                          variant="outline"
                          className="text-pink-600 border-pink-200 hover:bg-pink-50 bg-transparent"
                          onClick={() => handleShare("instagram")}
                        >
                          Instagram
                        </Button>
                      </div>
                    </div>
                  </DialogContent>
                </Dialog>
              </div>
            </CardContent>
          </Card>

          {/* Disclaimer */}
          <Card className="mt-6 bg-gray-50 border-gray-200">
            <CardContent className="p-4">
              <p className="text-sm text-gray-600 text-center">
                <strong>Importante:</strong> Este teste Ã© apenas uma ferramenta de triagem e nÃ£o substitui uma avaliaÃ§Ã£o
                clÃ­nica profissional. Para um diagnÃ³stico preciso, consulte sempre um profissional especializado.
              </p>
            </CardContent>
          </Card>
        </div>
      </main>
    </div>
  )
}
